<?xml version="1.0" encoding="US-ASCII"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
		                    http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<groupId>com.scienceminer.grisp.nerd-data</groupId>
	<artifactId>com.scienceminer.grisp.nerd-data</artifactId>
	<packaging>jar</packaging>
	<version>0.0.6</version>
	
	<name>NERD-data</name>
	<description>Data creation for entity-fishing</description>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<avro.version>1.11.4</avro.version>
		<lmdbjni.version>0.4.6</lmdbjni.version>

		<!-- placeholder for exec arguments -->
    	<lang></lang>
    	<input></input>
		<output></output>
	</properties>
	
	<licenses>
		<license>
			<name>Apache License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0</url>
		</license>
	</licenses>
	
	<pluginRepositories>
        <pluginRepository>
            <id>central</id>
            <name>Central Repository</name>
            <url>https://repo.maven.apache.org/maven2</url>
            <layout>default</layout>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <releases>
                <updatePolicy>never</updatePolicy>
            </releases>
        </pluginRepository>
    </pluginRepositories>

    <repositories>
    	<repository>
			<id>3rd-party-local-repo</id>
			<name>This is a local repository included in the project, to access 3rd party libs.</name>
			<url>file:///${basedir}/../lib/</url>
			<layout>default</layout>
		</repository>
        <repository>
            <id>central</id>
            <name>Central Repository</name>
            <url>https://repo.maven.apache.org/maven2</url>
            <layout>default</layout>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
	    	<id>sonatype-oss-public</id>
		    <url>https://oss.sonatype.org/content/groups/public/</url>
		    <releases>
		      <enabled>true</enabled>
		    </releases>
		    <snapshots>
		      <enabled>true</enabled>
		    </snapshots>
	  	</repository>		
    </repositories>

	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
			</resource>
			
			<resource>
				<directory>src</directory>
				<targetPath>source/src</targetPath>
			</resource>
			<resource>
				<directory>${basedir}</directory>
				<targetPath>source</targetPath>
				<includes>
					<include>pom.xml</include>
				</includes>
			</resource>
		</resources>
		
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<executions>
					<execution>
						<id>make-a-jar</id>
						<phase>compile</phase>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			
			<plugin>
				<groupId>com.jolira</groupId>
				<artifactId>onejar-maven-plugin</artifactId>
				<version>1.4.4</version>
				<executions>
					<execution>
						<configuration>
							<mainClass>com.scienceminer.nerd.main.Main</mainClass>
							<onejarVersion>0.97</onejarVersion>
							<attachToBuild>true</attachToBuild>
							<classifier>onejar</classifier>
						</configuration>
						<goals>
							<goal>one-jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			
			<plugin>
				<inherited>true</inherited>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.12.4</version>
				<configuration>
					<argLine>-Xms256m -Xmx3072m</argLine>
				</configuration>
			</plugin>

			<!-- start: for generating license headers in source files. Run mvn license:format -->
			<plugin>
				<groupId>com.google.code.maven-license-plugin</groupId>
				<artifactId>maven-license-plugin</artifactId>
				<version>1.4.0</version>
				<configuration>
					<header>${basedir}/src/etc/header.txt</header>
					<includes>
						<include>src/main/java/**</include>
						<include>src/test/java/**</include>
					</includes>
				</configuration>
			</plugin>
			<!-- end: for generating license headers in source files. Run mvn license:format -->
			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.5.1</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>


			<plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>2.4</version>
                <configuration>
                    <descriptors>
                        <descriptor>src/main/assembly/hadoop-job.xml</descriptor>
                    </descriptors>
                    <archive>
                        <manifest>
                            <mainClass>org.wikipedia.miner.extract.DumpExtractor</mainClass>
                        </manifest>
                    </archive>
                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.avro</groupId>
                <artifactId>avro-maven-plugin</artifactId>
                <version>${avro.version}</version>
                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>schema</goal>
                        </goals>
                        <configuration>
                            <sourceDirectory>${project.basedir}/src/main/avro/</sourceDirectory>
                            <outputDirectory>${project.basedir}/src/main/java/</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

		</plugins>	
	</build>

	<profiles>
		<profile>
		  <!-- mvn compile exec:exec -PbuildTranslation -Dlang="en" -Dinput="./en/enwiki-latest-langlinks.sql.gz" -Doutput"./en/" -->	
		  <id>buildTranslation</id>
		  <activation><property><name>buildTranslation</name></property></activation>
		  <build>
			<plugins>
				<plugin>
				    <groupId>org.codehaus.mojo</groupId>
				    <artifactId>exec-maven-plugin</artifactId>
				    <configuration>
				      <executable>java</executable>
				      <arguments>
						<argument>-Xms2g</argument>
		            	<argument>-Xmx4g</argument>
				        <argument>-classpath</argument><classpath />
				        <argument>com.scienceminer.grisp.nerd.data.ProcessTranslation</argument>
            			<argument>${lang}</argument>
            			<argument>${input}</argument>
            			<argument>${output}</argument>
				      </arguments>
				    </configuration>
		    	</plugin>
		    </plugins>
		  </build>
		</profile>

		<profile>
		  <!-- mvn compile exec:exec -Dexec.classpathScope=compile -PbuildWikidata -Dinput="./wikidata/latest-all.json.bz2" -Doutput="./wikidata/" -->	
		  <id>buildWikidata</id>
		  <activation><property><name>buildWikidata</name></property></activation>
		  <build>
			<plugins>
				<plugin>
				    <groupId>org.codehaus.mojo</groupId>
				    <artifactId>exec-maven-plugin</artifactId>
				    <configuration>
				      <executable>java</executable>
				      <arguments>
						<argument>-Xms2g</argument>
		            	<argument>-Xmx4g</argument>
				        <argument>-classpath</argument><classpath />
				        <argument>com.scienceminer.grisp.nerd.data.ProcessWikiData</argument>
				        <argument>${input}</argument>
            			<argument>${output}</argument>

				        <!--argument>/media/lopez/data/wikidata/latest-all.json.bz2</argument>
				        <argument>/media/lopez/data/wikipedia/latest/</argument>
				        <argument>/media/lopez/data/wikipedia/latest/</argument-->
				      </arguments>
				    </configuration>
		    	</plugin>
		    </plugins>
		  </build>
		</profile>

		<profile>
		  <!-- mvn compile exec:exec -Dexec.classpathScope=compile -PmapUAT -->	
		  <id>mapUAT</id>
		  <activation><property><name>mapUAT</name></property></activation>
		  <build>
			<plugins>
				<plugin>
				    <groupId>org.codehaus.mojo</groupId>
				    <artifactId>exec-maven-plugin</artifactId>
				    <configuration>
				      <executable>java</executable>
				      <arguments>
						<argument>-Xms2g</argument>
		            	<argument>-Xmx4g</argument>
				        <argument>-classpath</argument><classpath />
				        <argument>com.scienceminer.grisp.nerd.mapping.UAT</argument>
				        <argument>/home/lopez/resources/UAT/UAT.json</argument>
				        <argument>/home/lopez/resources/UAT/UAT-nerd.json</argument>
				      </arguments>
				    </configuration>
		    	</plugin>
		    </plugins>
		  </build>
		</profile>

	</profiles>
	
	<dependencies>	
		<!-- Wikimedia markup parser -->
        <dependency>
            <groupId>org.sweble.wikitext</groupId>
            <artifactId>swc-parser-lazy</artifactId>
            <version>3.1.9</version>
        </dependency>
        <dependency>
            <groupId>org.sweble.wikitext</groupId>
            <artifactId>swc-engine</artifactId>
            <version>3.1.9</version>
        </dependency>

        <!-- entity-fishing library -->
		<dependency>
			<groupId>com.scienceminer.nerd</groupId>
			<artifactId>entity-fishing</artifactId>
			<version>0.0.6</version>
            <exclusions>
                <exclusion> 
                    <groupId>org.slf4j</groupId>
                    <artifactId>log4j-over-slf4j</artifactId>
                </exclusion>
            </exclusions>   
			<!--scope>system</scope>
		    <systemPath>${project.basedir}/../lib/com/scienceminer/nerd/nerd/0.0.3/nerd-0.0.3.jar</systemPath-->
		</dependency>

		<!-- test -->
		<dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.13.1</version>
            <scope>test</scope>
        </dependency>

        <!-- logging -->
        <dependency>
		  	<groupId>org.apache.logging.log4j</groupId>
		  	<artifactId>log4j-core</artifactId>
		  	<version>2.17.2</version>
		</dependency>
		<dependency>
		    <groupId>org.apache.logging.log4j</groupId>
		    <artifactId>log4j-slf4j18-impl</artifactId>
		    <version>2.17.1</version>
		</dependency>

        <!--dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>1.7.25</version>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>1.2.17</version>
        </dependency-->
		
		<!-- commons -->
		<dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.11.0</version>
        </dependency>
		<dependency>
		   <groupId>org.apache.httpcomponents</groupId>
		   <artifactId>httpclient</artifactId>
		   <version>4.5.13</version>
		</dependency>
		<dependency>
		   <groupId>org.apache.httpcomponents</groupId>
		   <artifactId>httpmime</artifactId>
		   <version>4.5.13</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.4</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-collections4</artifactId>
			<version>4.1</version>
		</dependency>
		<dependency>
		    <groupId>org.apache.commons</groupId>
		    <artifactId>commons-compress</artifactId>
		    <version>1.21</version>
		</dependency>
		<dependency>
			  <groupId>org.apache.commons</groupId>
			  <artifactId>commons-math3</artifactId>
			  <version>3.3</version>
		  </dependency>

		<!-- utilities -->
		<dependency>
			<groupId>directory-naming</groupId>
			<artifactId>naming-java</artifactId>
			<version>0.8</version>
		</dependency>

		<dependency>
			<groupId>org.apache.hadoop</groupId>
			<artifactId>hadoop-core</artifactId>
			<version>1.2.1</version>
			<exclusions>
			    <exclusion>
			      <groupId>tomcat</groupId>
			      <artifactId>jasper-runtime</artifactId>
			    </exclusion>
			    <exclusion>
			      <groupId>tomcat</groupId>
			      <artifactId>jasper-compiler</artifactId>
			    </exclusion>
                <exclusion> 
                    <groupId>org.slf4j</groupId>
                    <artifactId>log4j-over-slf4j</artifactId>
                </exclusion>
			  </exclusions>
		</dependency>
		<!-- hadoop-0.20.2-core.jar -->

		<!--dependency>
			<groupId>org.apache.opennlp</groupId>
			<artifactId>opennlp-tools</artifactId>
			<version>1.5.3</version>
		</dependency-->
        <dependency>
			<groupId>net.arnx</groupId>
			<artifactId>jsonic</artifactId>
			<version>1.3.5</version>
		</dependency>
		<dependency>
            <groupId>net.sf.trove4j</groupId>
            <artifactId>trove4j</artifactId>
            <version>3.0.3</version>
        </dependency>
        <dependency>
            <groupId>org.apache.avro</groupId>
            <artifactId>avro</artifactId>
            <version>${avro.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.avro</groupId>
            <artifactId>avro-maven-plugin</artifactId>
            <version>${avro.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.avro</groupId>
            <artifactId>avro-compiler</artifactId>
            <version>${avro.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.avro</groupId>
            <artifactId>avro-mapred</artifactId>
            <version>${avro.version}</version>
        </dependency>

        <!-- data storage -->
        <dependency>
          <groupId>org.deephacks.lmdbjni</groupId>
          <artifactId>lmdbjni</artifactId>
          <version>${lmdbjni.version}</version>
        </dependency>
        <dependency>
          <groupId>org.deephacks.lmdbjni</groupId>
          <artifactId>lmdbjni-linux64</artifactId>
          <version>${lmdbjni.version}</version>
        </dependency>
		<dependency>
			<groupId>org.deephacks.lmdbjni</groupId>
			<artifactId>lmdbjni-osx64</artifactId>
			<version>${lmdbjni.version}</version>
		</dependency>
		<dependency>
			<groupId>org.deephacks.lmdbjni</groupId>
			<artifactId>lmdbjni-win64</artifactId>
			<version>${lmdbjni.version}</version>
		</dependency>

		<!-- jackson for json / yaml processing -->
		<dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>2.13.2</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.13.4.2</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>2.13.2</version>
        </dependency>
        <dependency>
        	<groupId>com.fasterxml.jackson.dataformat</groupId>
        	<artifactId>jackson-dataformat-yaml</artifactId>
        	<version>2.13.2</version>
	    </dependency>

	    <!-- utilities for embeddings -->
	    <dependency>
			<groupId>it.unimi.dsi</groupId>
			<artifactId>sux4j</artifactId>
			<version>3.1.2</version>
			<exclusions>
				<exclusion> 
					<groupId>org.slf4j</groupId>
					<artifactId>log4j-over-slf4j</artifactId>
				</exclusion>
				<exclusion> 
					<groupId>ch.qos.logback</groupId>
					<artifactId>logback-classic</artifactId>
				</exclusion>
			</exclusions>	
		</dependency>
		<dependency>
			<groupId>it.unimi.dsi</groupId>
			<artifactId>fastutil</artifactId>
			<version>6.5.12</version>
			<exclusions>
				<exclusion> 
					<groupId>org.slf4j</groupId>
					<artifactId>log4j-over-slf4j</artifactId>
				</exclusion>
				<exclusion> 
					<groupId>ch.qos.logback</groupId>
					<artifactId>logback-classic</artifactId>
				</exclusion>
			</exclusions>	
		</dependency>
		<dependency>
			<groupId>it.unimi.dsi</groupId>
			<artifactId>dsiutils</artifactId>
			<version>2.1.9</version>
			<exclusions>
				<exclusion> 
					<groupId>org.slf4j</groupId>
					<artifactId>log4j-over-slf4j</artifactId>
				</exclusion>
				<exclusion> 
					<groupId>ch.qos.logback</groupId>
					<artifactId>logback-classic</artifactId>
				</exclusion>
			</exclusions>	
		</dependency>
		<dependency>
		  	<groupId>org.grobid</groupId>
		  	<artifactId>grobid-core</artifactId>
		  	<version>0.7.2</version>
		</dependency>

	    <!-- for some mysterious reason, hadoop requires this instead of the default xalan (?) -->
	    <dependency>
		  	<groupId>net.sf.saxon</groupId>
		  	<artifactId>Saxon-HE</artifactId>
		  	<version>9.8.0-4</version>
		</dependency>

	</dependencies>
		
</project>
